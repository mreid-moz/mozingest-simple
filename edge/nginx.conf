worker_processes 1;

error_log stderr warn;
events {
    worker_connections 1024;
}
http {
  log_format elb_upstream_length '$msec "$http_x_forwarded_for" "$request"'
      ' $request_length $status $body_bytes_sent "$http_referer"'
      ' "$http_user_agent" $request_time $upstream_response_time "$gzip_ratio"';

  server {
    include includes/gzip.conf;
    listen 80;
    client_body_buffer_size 10M;

    access_log stdout;

    location /status {
        return 200 'OK';
        add_header Content-Type text/plain;
    }

    moz_ingest_kafka_brokerlist         kafka:9092;
    moz_ingest_kafka_max_buffer_size    100000;
    moz_ingest_kafka_max_buffer_ms      10;
    moz_ingest_kafka_batch_size         100;
    moz_ingest_client_ip                on;
    moz_ingest_max_unparsed_uri_size    1024;
    moz_ingest_max_content_size         16000k;
    moz_ingest_header                   Content-Length;
    moz_ingest_header                   Date;
    moz_ingest_header                   DNT;
    moz_ingest_header                   Host;
    moz_ingest_header                   User-Agent;
    moz_ingest_header                   X-Forwarded-For;
    moz_ingest_landfill_dir             /data/landfill;
    moz_ingest_landfill_roll_size       10M;
    moz_ingest_landfill_roll_timeout    120;

    location /submit/telemetry/ {
        keepalive_timeout 0;
        moz_ingest;
        moz_ingest_kafka_topic telemetry-raw;
        moz_ingest_landfill_name telemetry_incoming ;
    }

    location /submit/sslreports {
        keepalive_timeout 0;
        moz_ingest;
        moz_ingest_kafka_topic sslreports;
        moz_ingest_landfill_name sslreports_incoming ;
    }

    location / {
        keepalive_timeout 0;
        moz_ingest;
        moz_ingest_kafka_topic default;
        moz_ingest_landfill_name default_incoming ;
    }
  }
}
